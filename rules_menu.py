import disnake
from disnake.ext import commands
from disnake import Embed

class RulesMenu(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def rules(self, ctx):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø–æ—è–≤–ª—è–µ—Ç—Å—è DropdownMenu."""
        # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É
        button = disnake.ui.Button(emoji="üõ°", label="–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –∏ –ø—Ä–∞–≤–∏–ª", style=disnake.ButtonStyle.gray)
        # –°–æ–∑–¥–∞–µ–º view –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫—É
        view = disnake.ui.View()
        view.add_item(button)
        # –û–∂–∏–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
        async def button_callback(interaction):
            # –°–æ–∑–¥–∞–µ–º DropdownView –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ–≥–æ DropdownMenu
            dropdown_view = DropdownView()
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª:", view=dropdown_view, ephemeral=True)
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º callback —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–Ω–æ–ø–∫–µ
        button.callback = button_callback
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
        await ctx.send("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞:", view=view)

class DropdownMenu(disnake.ui.Select):
    def __init__(self):
        options = [
            disnake.SelectOption(label="–ö–æ–Ω—Ç–µ–Ω—Ç 18+", description="–ù–µ–¥–µ—Ç—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç, –æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ç–µ–º—É NSFW", emoji="üîû"),
            disnake.SelectOption(label="–ß–∏—Å—Ç–æ—Ç–∞ —á–∞—Ç–æ–≤ –∏ –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–µ —Ç–µ–º—ã", description="–°–ø–∞–º, —Ñ–ª—É–¥ –∏ –ø–æ–ª–∏—Ç–∏–∫–∞", emoji="üóë"),
            disnake.SelectOption(label="–í–µ–∂–ª–∏–≤–æ—Å—Ç—å", description="–£–≤–∞–∂–µ–Ω–∏–µ –∫ –¥—Ä—É–≥–∏–º, —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å", emoji="‚ù§"),
            disnake.SelectOption(label="–†–µ–∫–ª–∞–º–∞ –∏ —É—Å–ª—É–≥–∏", description="–ù–∞–∑–æ–π–ª–∏–≤–∞—è —Ä–µ–∫–ª–∞–º–∞ —É—Å–ª—É–≥ –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤", emoji="üîî"),
            disnake.SelectOption(label="–°–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å", description="–ù–µ–ø–æ–¥–æ–±–∞—é—â–∏–µ –Ω–∏–∫–∏, –∫–ª–æ–Ω—ã —á—É–∂–∏—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π", emoji="üåà"),
            disnake.SelectOption(label="–ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π", description="–†–µ–ø–æ—Ä—Ç—ã –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã, —Ç–≤–∏–Ω–∫–∏", emoji="üíÇ‚Äç‚ôÇÔ∏è"),
            disnake.SelectOption(label="–ü—Ä–∞–≤–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", description="–ù–∞–∫–∞–∑–∞–Ω–∏—è –Ω–∞ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏", emoji="‚ö†"),
        ]

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª...",
            min_values=1,
            max_values=1,
            options=options
        )

    async def callback(self, interaction: disnake.Interaction):
        selected_value = self.values[0]  # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ —Å—Ç—Ä–æ–∫—É

        embed = disnake.Embed(
            title=f"–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞: {selected_value}",
            color=0x2F3136
        )

        if selected_value == "–ö–æ–Ω—Ç–µ–Ω—Ç 18+":
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 1", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ 1", inline=True)
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 2", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ 2", inline=True)
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 3", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ 3", inline=True)
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 4", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ 4", inline=True)
        elif selected_value == "–ß–∏—Å—Ç–æ—Ç–∞ —á–∞—Ç–æ–≤ –∏ –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–µ —Ç–µ–º—ã":
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 1", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ 1", inline=True)
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 2", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ 2", inline=True)
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 3", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ 3", inline=True)
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 4", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ 4", inline=True)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
        if interaction.response.is_done():
            # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —É–∂–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await interaction.edit_original_message(embed=embed, view=DropdownView())
        else:
            # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –µ—â–µ –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å embed –∏ view
            await interaction.response.send_message(embed=embed, view=DropdownView(), ephemeral=True)


class DropdownView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(DropdownMenu())

def setup(bot):
    bot.add_cog(RulesMenu(bot))
