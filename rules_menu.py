import disnake
from disnake.ext import commands
from disnake import Embed

class RulesMenu(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def rules(self, ctx):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø–æ—è–≤–ª—è–µ—Ç—Å—è DropdownMenu."""
        # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É
        button = disnake.ui.Button(emoji="üõ°", label="–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –∏ –ø—Ä–∞–≤–∏–ª", style=disnake.ButtonStyle.gray)
        # –°–æ–∑–¥–∞–µ–º view –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫—É
        view = disnake.ui.View()
        view.add_item(button)
        # –û–∂–∏–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
        async def button_callback(interaction):
            # –°–æ–∑–¥–∞–µ–º DropdownView –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ–≥–æ DropdownMenu
            dropdown_view = DropdownView()
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª:", view=dropdown_view, ephemeral=True)
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º callback —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–Ω–æ–ø–∫–µ
        button.callback = button_callback
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
        await ctx.send("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞:", view=view)

class DropdownMenu(disnake.ui.Select):
    def __init__(self):
        options = [
            disnake.SelectOption(label="–ö–æ–Ω—Ç–µ–Ω—Ç 18+", description="–ù–µ–¥–µ—Ç—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç, –æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ç–µ–º—É NSFW", emoji="üîû"),
            disnake.SelectOption(label="–ß–∏—Å—Ç–æ—Ç–∞ —á–∞—Ç–æ–≤ –∏ –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–µ —Ç–µ–º—ã", description="–°–ø–∞–º, —Ñ–ª—É–¥ –∏ –ø–æ–ª–∏—Ç–∏–∫–∞", emoji="üóë"),
            disnake.SelectOption(label="–í–µ–∂–ª–∏–≤–æ—Å—Ç—å", description="–£–≤–∞–∂–µ–Ω–∏–µ –∫ –¥—Ä—É–≥–∏–º, —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å", emoji="‚ù§"),
            disnake.SelectOption(label="–†–µ–∫–ª–∞–º–∞ –∏ —É—Å–ª—É–≥–∏", description="–ù–∞–∑–æ–π–ª–∏–≤–∞—è —Ä–µ–∫–ª–∞–º–∞ —É—Å–ª—É–≥ –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤", emoji="üîî"),
            disnake.SelectOption(label="–°–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å", description="–ù–µ–ø–æ–¥–æ–±–∞—é—â–∏–µ –Ω–∏–∫–∏, –∫–ª–æ–Ω—ã —á—É–∂–∏—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π", emoji="üåà"),
            disnake.SelectOption(label="–ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π", description="–†–µ–ø–æ—Ä—Ç—ã –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã, —Ç–≤–∏–Ω–∫–∏", emoji="üíÇ‚Äç‚ôÇÔ∏è"),
            disnake.SelectOption(label="–ü—Ä–∞–≤–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", description="–ù–∞–∫–∞–∑–∞–Ω–∏—è –Ω–∞ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏", emoji="‚ö†"),
        ]

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª...",
            min_values=1,
            max_values=1,
            options=options
        )

    async def callback(self, interaction: disnake.Interaction):
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Embed —Å –æ–±—â–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ —Ü–≤–µ—Ç–æ–º
        embed = Embed(
            title="–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞",
            color=0x2F3136  # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ Discord –¥–ª—è –ª—É—á—à–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        )

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤ embed.
        # –ü–∞—Ä–∞–º–µ—Ç—Ä inline=True –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–æ–ª—è –±—É–¥—É—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –æ–¥–Ω—É –ª–∏–Ω–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞
        embed.add_field(name="üîû –ö–û–ù–¢–ï–ù–¢ 18+", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ 18+...", inline=True)
        embed.add_field(name="üìõ –ù–ï–ü–†–ò–Ø–¢–ù–û–ï –û–ë–©–ï–ù–ò–ï",
                        value="–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —á—Ç–æ-—Ç–æ, —á—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏–ª–∏ –Ω–µ—É–º–µ—Å—Ç–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ –∫–∞–Ω–∞–ª #–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º–∞–Ω–¥—ã /report",
                        inline=True)

        # –¢–∞–∫ –∫–∞–∫ Discord –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ, –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ—á–∫—É –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ —ç—Ç–æ–≥–æ.
        embed.add_field(name="\u200B", value="\u200B",
                        inline=False)  # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ä–∞–∑—Ä—ã–≤ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏

        embed.add_field(name="üßπ –ß–ò–°–¢–û–¢–ê –ß–ê–¢–û–í –ò –ù–ï–ü–†–ò–Ø–¢–ù–´–ï –¢–ï–ú–´", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ —á–∏—Å—Ç–æ—Ç—É —á–∞—Ç–æ–≤...",
                        inline=True)
        embed.add_field(name="ü§ù –í–ï–ñ–õ–ò–í–û–°–¢–¨", value="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å...", inline=True)

        # –ü–µ—Ä–µ–¥–∞–µ–º embed –∫–∞–∫ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        await interaction.response.edit_message(content=None, embed=embed, view=self.view)

class DropdownView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(DropdownMenu())

def setup(bot):
    bot.add_cog(RulesMenu(bot))
