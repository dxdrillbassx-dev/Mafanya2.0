import disnake
import pymysql
from disnake.ext import commands
from datetime import datetime

class Info(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(description="–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
    async def info(self, ctx, member: disnake.Member):
        if member is None:
            await ctx.send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        try:
            with self.bot.db.conn.cursor() as cursor:
                # –ó–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                sql_coins = "SELECT coins FROM user_coins WHERE user_id = %s"
                cursor.execute(sql_coins, (member.id,))
                result_coins = cursor.fetchone()
                coins = result_coins['coins'] if result_coins else 0

                sql_tokens = "SELECT tokens FROM user_tokens WHERE user_id = %s"
                cursor.execute(sql_tokens, (member.id,))
                result_tokens = cursor.fetchone()
                tokens = result_tokens['tokens'] if result_tokens else 0

                sql_messages = "SELECT COUNT(*) AS message_count FROM user_activity WHERE user_id = %s AND activity_type = '–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è'"
                cursor.execute(sql_messages, (member.id,))
                result_messages = cursor.fetchone()
                message_count = result_messages['message_count'] if result_messages else 0

                sql_last_activity = "SELECT MAX(activity_date) AS last_activity_date FROM user_activity WHERE user_id = %s"
                cursor.execute(sql_last_activity, (member.id,))
                result_last_activity = cursor.fetchone()
                last_activity_date = result_last_activity['last_activity_date'] if result_last_activity else None

                sql_mutes = "SELECT mute_count FROM user_mutes WHERE user_id = %s"
                cursor.execute(sql_mutes, (member.id,))
                result_mutes = cursor.fetchone()
                mute_count = result_mutes['mute_count'] if result_mutes else 0

                sql_warnings = "SELECT warn_count FROM user_warnings WHERE user_id = %s"
                cursor.execute(sql_warnings, (member.id,))
                result_warnings = cursor.fetchone()
                warn_count = result_warnings['warn_count'] if result_warnings else "–ù–µ—Ç—É"

                roles = [role.name for role in member.roles if role.name != "@everyone"]
                roles_string = ", ".join(roles) if roles else "–ù–µ—Ç—É"

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                try:
                    ban_entry = await ctx.guild.fetch_ban(member)
                    has_ban = "‚úÖ –ó–∞–±–∞–Ω–µ–Ω"
                except disnake.NotFound:
                    has_ban = "‚ùå –ù–µ—Ç"

                # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                avatar_url = member.avatar.url if member.avatar else member.default_avatar.url

                # –°–æ–∑–¥–∞–Ω–∏–µ embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                embed = disnake.Embed(
                    title=f"{member.name}",
                    description=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                    color=disnake.Color.from_rgb(43, 45, 49)  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –Ω–∞ –∑–æ–ª–æ—Ç–æ–π
                )
                embed.set_thumbnail(url=avatar_url)  # –ö—Ä—É–ø–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                embed.add_field(name="ü™ô –ú–æ–Ω–µ—Ç—ã", value=str(coins), inline=True)
                embed.add_field(name="üéüÔ∏è –ñ–µ—Ç–æ–Ω—ã", value=str(tokens), inline=True)
                embed.add_field(name="‚†Ä", value="‚†Ä", inline=False)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤–º–µ—Å—Ç–æ "\u200b"
                embed.add_field(name="üí¨ –°–æ–æ–±—â–µ–Ω–∏—è", value=str(message_count), inline=True)
                embed.add_field(name="‚è±Ô∏è –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", value=last_activity_date, inline=True)
                embed.add_field(name="‚†Ä", value="‚†Ä", inline=False)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤–º–µ—Å—Ç–æ "\u200b"
                embed.add_field(name="üîá –ú—É—Ç—ã", value=str(mute_count), inline=True)
                embed.add_field(name="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è", value=str(warn_count), inline=True)
                embed.add_field(name="‚†Ä", value="‚†Ä", inline=False)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤–º–µ—Å—Ç–æ "\u200b"
                embed.add_field(name="üë• –†–æ–ª–∏", value=roles_string, inline=False)
                embed.set_footer(text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–≤–∞–ª–∞

                await ctx.send(embed=embed)

        except pymysql.Error as e:
            print("- [Mafanya] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            print(e)
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.")

def setup(bot):
    bot.add_cog(Info(bot))
